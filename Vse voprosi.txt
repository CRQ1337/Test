- Типы данных, какие есть и их особенности [ВАЖНО]
- Массивы, виды массивов, двухмерные/трехмерные [ВАЖНО]
- Память, работа с памятью куча, стек, статическое/динамическое выделение памяти, высвобождение памяти от массивов [ВАЖНО]
- Операторы new/delete [ВАЖНО]
- Placement new
- Git 
- Подбельский (книга по Си) 
- GCC
------------------------------------------------
- Сравнение вещественных чисел 
- POD
- Uint8_t
- Битовые операции(установка/снятие бита в числе, инвертирование бита, логические/условные операции), переполнение/перенос/сдвиги [ВАЖНО]
- Отрицательные/положительные числа в бинарном виде
- Инкременты/посткременты [ВАЖНО]
- Могут ли массивы быть более чем двухмерные/трехмерные
- Доступ к элементам массива, как один присвоить другому
- delete а/переменная, форма записи
- Как определить размер массива(sizeof) [ВАЖНО]
- Препроцессор, макросы, средства, include/define, define или константа что лучше
- Виды оптимизации, чем отличается релиз-дебаг версии [ВАЖНО]
- Указатель на массив, изменение элементов через указатели, арифметические указатели
- Указатели/ссылки, константа указатель и указатель на константу, константные ссылки
- Копирование типов
- написать программу hello world(printf)
------------------------------------------------
Структуры: [ВАЖНО]
-ПРИСВАИВАНИЕ
-КОПИРОВАНИЕ
-ВЫРАВНИВАНЕИ ПОЛЕЙ
-СВЯЗАННЫЕ СПИСКИ
-sizeof структуры char/int
- Как перенести отрицательное число в положительное и наоборот(двоичная система), переполнение/перенос
- Проверить f = (++a + a++)
- Как присвоить значение элемента массива без скобок []
- Удаление массива/числа массива через delete a и delete [] a;
- Уровни оптимизации LTO
- Битовые поле/объединение
- Сравнение вещественных чисел(epsilon)
- POD(копирование типов)
- Что такое препроцессор
- Макросы/средства, include/define, что лучше define или константа?
------------------------------------------------
Указатели [ВАЖНО] 
- на массив 
- изменение элементов массива через указатели
- арифметические указатели
- указатели/ссылки
- константа указатель
- указатель на константу
- константные ссылки
------------------------------------------------
- Что такое unordered map?
- В чем разница между set и list?
- Что такое unordered set?
- Что такое реверсивные итераторы?
- Sort(упорядочивани/сортировка) в контейнерах
- Vector в чем разница между add и []?
- Свойства типов
- Приведение(кастование) типов, какие есть, в чем отличия и т.д.
- Можно ли из итератора указывать на объект?
- Классы, конструкторы/деструкторы
- Наследование[ВАЖНО]
- Полиморфизм[ВАЖНО
- Инкапсуляция[ВАЖНО]
- Виртуальное наследование
- Что будет если сделать конструктор приватным(private) у класса
----------------------------------------
-Предикаты, оператор меньше(<)
-Переход из реверсивного итератора в обычный и наоборот
-Как отсортировать list при помощи самописной функции
-Разница между At и [] - для Vector(ответ - [] не имеет проверка диапазона)
-В чем разница между * и -> при работе с итераторами?
-Есть конструктор из указателей на объекты, как при помощи итератора поменять поле?
---------------------------------------
- стандартные предикаты
- функция compare
- кастование C++ vs C (си-стайл)
- Explicit
---------------------------------------
- Можно ли наследовать приватную структуру? [НАЙТИ ТАБЛИЦУ]
- Виртуальный деструктор и дефолтный(=default)
- Списки инициализации(классы)[ВАЖНО]
- Виртуальное наследование [ВАЖНО]
- Переопределение операторов
- С++ исключения, подходы, плюсы/минусы[ВАЖНО]
- explicit конструктор
- Что будет если конструктор сделать private?
- QT Creator(брейкпоинты с условиями, останова, вычисление значений, stack trace)
------------------------------------------------
- Подходы в исключения(бросок исключения/возвращение значения)
- Зачем нужен Return, если можно использовать Exception?
- QT - функция Exit
- Сделать своё исключение, два класса green и red, базовый класс color - вызов метода red и возврат, что он green.
- Статический функции и переменные
- Файл PCH - ?
- Унарные операторы
- Ленивая проверка
- Логические операторы
- if (true && false && true) и (true ll  false  ll true)
- if (getFun() && getFun1() || getFun2()) - будут вызваны все функции?
- namespace класс color и класс bright(в другом namespace), в обоих есть функция увеличения
- Разыменовывание указателя
- 3x const функции в классе color, 1-я принимает const int по ссылке, 2-я const int по указателю, 3-я const int по указателю на указатель. Сделать, чтобы ничего нельзя было ввести кроме int 
- Есть ли разница const слева / const справа
- Можно ли изменить данные через const указатель / указатель на const данные / как изменить const данные?
------------------------------------------------
- Что такое функции в C++? Возвращаемые значения(какие бывают), возвращаемые значения по ссылке/указателю/копии, return
- Для чего нужны файлы h/cpp/hpp/.o, можно ли в файл .h добавлять другие .h?
- Приоритеты операций, как выполняются операции в функциях?
- Задачи из TG (online gdb)
- Namespace
- Функция Exit(QT?)
- Курс Stepik от yandex/mail(vk)
------------------------------------------------
- Класс с членом класса m_value, функция которая принимает аргумент m_value, как m_value принимает значение? m_value = m_value
- ключевое слово This
- два блока Try, внутри color exception, снаружи std::exception
- оператор взятия адреса
- Область видимости
- Get/Set
-  : инициализация
- Пример, где меняю константную переменную/указатель/ссылку
- Как выглядит .obj (.o) файл
- .h/.hpp файлы
- SET VALUE. базовый класс color, производные red и green с функцией set_value, в один из классов кидаем исключение. Каждый класс в отдельном .h файле, в .cpp реализация 
-----------------------------------------------
- что значит get value () const
- константные методы класса
- 1 try / 2 catch блока
- исключения, порядок
- можно ли кинуть исключение в конструктор/деструктор
- double exception в деструкторах
- как кинуть исключение, если захочу - в деструктор
- как послать исключение дальше?
- виртуальные функции, virtual/override
- github/bitbucket
- придумать программу(калькулятор?)
------------------------------------------------
- почитать про mutable( это к get value () const)
- в чем риск бросков исключений в конструкторы/деструкторы
- name mangling(фото с доски) и перегрузка функций
------------------------------------------------
- name mangling(фото с доски)
- умные указатели


